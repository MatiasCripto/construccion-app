// src/components/ReportGenerator.js - GENERADOR COMPLETO DE REPORTES PDF
const { useState, useEffect } = React;

const ReportGenerator = ({ tipo, datos, onClose }) => {
  const [isGenerating, setIsGenerating] = useState(false);
  const [selectedOptions, setSelectedOptions] = useState({});

  // Informaci√≥n de la empresa
  const COMPANY_INFO = {
    nombre: 'CONSTRUCCI√ìN PRO S.A.',
    direccion: 'Av. Corrientes 1234, CABA, Argentina',
    telefono: '+54 11 4567-8900',
    email: 'info@construccionpro.com.ar',
    cuit: '30-12345678-9',
    web: 'www.construccionpro.com.ar'
  };

  // Logo SVG de la empresa (personalizable)
  const COMPANY_LOGO_SVG = `
    <svg width="120" height="80" viewBox="0 0 120 80" fill="none" xmlns="http://www.w3.org/2000/svg">
      <rect width="120" height="80" fill="#667eea" rx="8"/>
      <path d="M20 25h80v5H20zm0 10h60v5H20zm0 10h70v5H20z" fill="white"/>
      <circle cx="85" cy="50" r="15" fill="white" opacity="0.8"/>
      <path d="M85 40l8 10-8 10-8-10z" fill="#667eea"/>
      <text x="60" y="70" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white" text-anchor="middle">
        CONSTRUCCI√ìN PRO
      </text>
    </svg>
  `;

  // Configuraciones por tipo de reporte
  const REPORT_CONFIGS = {
    relevamiento: {
      titulo: 'RELEVAMIENTO FOTOGR√ÅFICO DE OBRA',
      subtitulo: 'Documentaci√≥n visual del progreso de construcci√≥n',
      incluir: ['info_obra', 'fotos', 'ubicacion', 'fecha', 'observaciones', 'personal'],
      formato: 'A4_portrait',
      color: '#3B82F6'
    },
    informe_final: {
      titulo: 'INFORME FINAL DE OBRA',
      subtitulo: 'Reporte completo de finalizaci√≥n de proyecto',
      incluir: ['resumen_ejecutivo', 'materiales_usados', 'personal_participante', 'timeline', 'fotos_finales', 'certificaciones'],
      formato: 'A4_portrait',
      color: '#10B981'
    },
    presupuesto: {
      titulo: 'PRESUPUESTO DE OBRA',
      subtitulo: 'Cotizaci√≥n detallada de materiales y mano de obra',
      incluir: ['detalle_materiales', 'costos_mano_obra', 'subtotales', 'impuestos', 'total_general', 'condiciones_comerciales'],
      formato: 'A4_portrait',
      color: '#F59E0B'
    },
    informe_obra: {
      titulo: 'INFORME DIARIO DE OBRA',
      subtitulo: 'Reporte de actividades y avance diario',
      incluir: ['fecha_trabajo', 'personal_presente', 'tareas_realizadas', 'materiales_utilizados', 'avance_porcentual', 'observaciones_diarias'],
      formato: 'A4_portrait',
      color: '#8B5CF6'
    },
    reporte_personal: {
      titulo: 'REPORTE DE GESTI√ìN DE PERSONAL',
      subtitulo: 'An√°lisis de rendimiento y asignaciones',
      incluir: ['estadisticas_generales', 'rendimiento_individual', 'asignaciones_actuales', 'historial_obras', 'evaluaciones'],
      formato: 'A4_portrait',
      color: '#EF4444'
    },
    estadisticas: {
      titulo: 'REPORTE DE ESTAD√çSTICAS GENERALES',
      subtitulo: 'M√©tricas de productividad y rendimiento empresarial',
      incluir: ['metricas_obras', 'eficiencia_personal', 'uso_materiales', 'tendencias_temporales', 'kpis_principales'],
      formato: 'A4_portrait',
      color: '#06B6D4'
    },
    trabajo_diario: {
      titulo: 'REPORTE DE TRABAJOS POR PER√çODO',
      subtitulo: 'An√°lisis de actividades por fecha y empleado',
      incluir: ['periodo_analizado', 'trabajos_por_fecha', 'trabajos_por_empleado', 'resumen_actividades', 'conclusiones'],
      formato: 'A4_portrait',
      color: '#84CC16'
    },
    informe_obras: {
      titulo: 'REPORTE GENERAL DE OBRAS',
      subtitulo: 'Estado integral de todos los proyectos',
      incluir: ['resumen_general', 'obras_activas', 'obras_completadas', 'asignaciones_personal', 'cronogramas'],
      formato: 'A4_portrait',
      color: '#F97316'
    }
  };

  const config = REPORT_CONFIGS[tipo] || REPORT_CONFIGS.relevamiento;

  useEffect(() => {
    // Inicializar opciones seleccionadas
    const initialOptions = {};
    config.incluir.forEach(option => {
      initialOptions[option] = true;
    });
    setSelectedOptions(initialOptions);
  }, [tipo]);

  const generatePDF = async () => {
    setIsGenerating(true);
    
    try {
      // Simular generaci√≥n de PDF
      console.log('üéØ Generando PDF:', tipo);
      console.log('üìã Configuraci√≥n:', config);
      console.log('üìä Datos:', datos);
      console.log('‚öôÔ∏è Opciones:', selectedOptions);

      // Crear contenido del PDF
      const pdfContent = await createPDFContent();
      
      // Simular descarga
      await new Promise(resolve => setTimeout(resolve, 2000));
      
      // Crear elemento de descarga simulado
      const fileName = `${config.titulo.replace(/\s+/g, '_')}_${new Date().toISOString().split('T')[0]}.pdf`;
      
      // En una implementaci√≥n real, aqu√≠ usar√≠as jsPDF o similar
      console.log('üìÑ PDF generado:', fileName);
      console.log('üìë Contenido:', pdfContent);
      
      // Simular descarga del archivo
      const blob = new Blob([pdfContent.text], { type: 'text/plain' });
      const url = URL.createObjectURL(blob);
      
      const link = document.createElement('a');
      link.href = url;
      link.download = fileName;
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
      
      URL.revokeObjectURL(url);
      
      showNotification('‚úÖ PDF generado exitosamente', 'success');
      
    } catch (error) {
      console.error('‚ùå Error generando PDF:', error);
      showNotification('‚ùå Error al generar PDF', 'error');
    } finally {
      setIsGenerating(false);
    }
  };

  const createPDFContent = async () => {
    const header = createHeader();
    const content = await createContent();
    const footer = createFooter();
    
    return {
      text: `${header}\n\n${content}\n\n${footer}`,
      html: createHTMLContent(),
      metadata: {
        titulo: config.titulo,
        fecha: new Date().toLocaleDateString('es-AR'),
        empresa: COMPANY_INFO.nombre
      }
    };
  };

  const createHeader = () => {
    return `
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                          ${COMPANY_INFO.nombre}                           ‚ïë
‚ïë                                                                  ‚ïë
‚ïë  üìç ${COMPANY_INFO.direccion}                    ‚ïë
‚ïë  üìû ${COMPANY_INFO.telefono} | üìß ${COMPANY_INFO.email}          ‚ïë
‚ïë  üåê ${COMPANY_INFO.web} | üÜî CUIT: ${COMPANY_INFO.cuit}         ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

${config.titulo}
${config.subtitulo}

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üìÖ Fecha de Emisi√≥n: ${new Date().toLocaleDateString('es-AR', {
      weekday: 'long',
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    })}
üïê Hora: ${new Date().toLocaleTimeString('es-AR')}
üë§ Generado por: Administrador del Sistema
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`;
  };

  const createContent = async () => {
    let content = '';

    // Contenido espec√≠fico por tipo de reporte
    switch (tipo) {
      case 'relevamiento':
        content = createRelevamientoContent();
        break;
      case 'informe_final':
        content = createInformeFinalContent();
        break;
      case 'presupuesto':
        content = createPresupuestoContent();
        break;
      case 'informe_obra':
        content = createInformeObraContent();
        break;
      case 'reporte_personal':
        content = createReportePersonalContent();
        break;
      case 'estadisticas':
        content = createEstadisticasContent();
        break;
      case 'trabajo_diario':
        content = createTrabajoDiarioContent();
        break;
      case 'informe_obras':
        content = createInformeObrasContent();
        break;
      default:
        content = createGenericContent();
    }

    return content;
  };

  const createRelevamientoContent = () => {
    const obra = datos.obras?.[0] || {};
    let content = `
üìã INFORMACI√ìN GENERAL DE LA OBRA
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

üèóÔ∏è  Nombre de la Obra: ${obra.nombre || 'No especificado'}
üìç Ubicaci√≥n: ${obra.ubicacion || 'No especificada'}
üìÖ Fecha de Inicio: ${obra.fecha_creacion ? new Date(obra.fecha_creacion).toLocaleDateString('es-AR') : 'No registrada'}
üë∑ Responsable: ${obra.albanil_nombre || 'No asignado'} ${obra.albanil_apellido || ''}
üõ†Ô∏è  Supervisor: ${obra.jefe_nombre || 'No asignado'} ${obra.jefe_apellido || ''}
üìä Estado Actual: ${obra.estado || 'Sin estado'}

`;

    if (selectedOptions.fotos && datos.fotos?.length > 0) {
      content += `
üì∏ REGISTRO FOTOGR√ÅFICO
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

Total de fotograf√≠as documentadas: ${datos.fotos.length}

`;
      datos.fotos.forEach((foto, index) => {
        content += `
üì∑ Fotograf√≠a ${index + 1}
‚îú‚îÄ Descripci√≥n: ${foto.descripcion || 'Sin descripci√≥n'}
‚îú‚îÄ Fecha: ${foto.fecha || 'No registrada'}
‚îú‚îÄ Ubicaci√≥n: ${foto.ubicacion || 'No especificada'}
‚îî‚îÄ [IMAGEN INSERTADA AQU√ç]

`;
      });
    }

    if (selectedOptions.observaciones && obra.descripcion) {
      content += `
üìù OBSERVACIONES GENERALES
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

${obra.descripcion}

`;
    }

    return content;
  };

  const createInformeFinalContent = () => {
    const obra = datos.obras?.[0] || {};
    let content = `
üìä RESUMEN EJECUTIVO
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

‚úÖ Obra Completada: ${obra.nombre || 'No especificado'}
üìÖ Per√≠odo de Ejecuci√≥n: ${obra.fecha_creacion ? new Date(obra.fecha_creacion).toLocaleDateString('es-AR') : 'No registrada'} - ${new Date().toLocaleDateString('es-AR')}
üìç Ubicaci√≥n del Proyecto: ${obra.ubicacion || 'No especificada'}
üë• Equipo de Trabajo: ${datos.personal?.length || 0} profesionales

`;

    if (selectedOptions.materiales_usados && datos.materiales?.length > 0) {
      content += `
üß± MATERIALES UTILIZADOS
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

`;
      datos.materiales.forEach(material => {
        content += `‚Ä¢ ${material.nombre}: ${material.cantidad || 'N/A'} ${material.unidad || 'unidades'}\n`;
      });
      content += '\n';
    }

    if (selectedOptions.personal_participante && datos.personal?.length > 0) {
      content += `
üë• PERSONAL PARTICIPANTE
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

`;
      datos.personal.forEach(empleado => {
        content += `‚Ä¢ ${empleado.nombre} ${empleado.apellido} - ${empleado.rol}\n`;
      });
      content += '\n';
    }

    content += `
üéØ CONCLUSIONES
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

La obra se ha completado satisfactoriamente cumpliendo con los est√°ndares 
de calidad establecidos y en los tiempos previstos.

‚úÖ Objetivos alcanzados
‚úÖ Calidad garantizada
‚úÖ Plazos cumplidos
‚úÖ Seguridad laboral mantenida

`;

    return content;
  };

  const createPresupuestoContent = () => {
    let content = `
üí∞ DETALLE DE PRESUPUESTO
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

Cliente: [Completar con datos del cliente]
Proyecto: ${datos.obras?.[0]?.nombre || 'Proyecto de Construcci√≥n'}
Fecha de Cotizaci√≥n: ${new Date().toLocaleDateString('es-AR')}
Validez: 30 d√≠as

`;

    if (selectedOptions.detalle_materiales && datos.materiales?.length > 0) {
      content += `
üß± MATERIALES Y SUMINISTROS
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

`;
      let totalMateriales = 0;
      datos.materiales.forEach(material => {
        const precio = material.precio_estimado || 0;
        const cantidad = 1; // Default quantity
        const subtotal = precio * cantidad;
        totalMateriales += subtotal;
        
        content += `‚Ä¢ ${material.nombre.padEnd(30)} | $${precio.toFixed(2).padStart(10)} x ${cantidad} = $${subtotal.toFixed(2).padStart(12)}\n`;
      });
      
      content += `${''.padEnd(50, '‚îÄ')}\n`;
      content += `SUBTOTAL MATERIALES: $${totalMateriales.toFixed(2).padStart(20)}\n\n`;
    }

    if (selectedOptions.costos_mano_obra) {
      const costoManoObra = 50000; // Valor ejemplo
      content += `
üë∑ MANO DE OBRA
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

‚Ä¢ Mano de obra especializada          $${costoManoObra.toFixed(2).padStart(12)}
‚Ä¢ Supervisi√≥n t√©cnica                 $${(costoManoObra * 0.2).toFixed(2).padStart(12)}

SUBTOTAL MANO DE OBRA:               $${(costoManoObra * 1.2).toFixed(2).padStart(12)}

`;
    }

    const subtotal = 100000; // Valor ejemplo
    const iva = subtotal * 0.21;
    const total = subtotal + iva;

    content += `
üìä RESUMEN GENERAL
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

Subtotal:                            $${subtotal.toFixed(2).padStart(12)}
IVA (21%):                           $${iva.toFixed(2).padStart(12)}
${''.padEnd(50, '‚ïê')}
TOTAL GENERAL:                       $${total.toFixed(2).padStart(12)}

üí° CONDICIONES COMERCIALES
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

‚Ä¢ Forma de pago: 50% anticipado, 50% contra entrega
‚Ä¢ Plazo de ejecuci√≥n: [A determinar seg√∫n proyecto]
‚Ä¢ Garant√≠a: 12 meses sobre trabajos realizados
‚Ä¢ Los materiales ser√°n de primera calidad
‚Ä¢ El presupuesto incluye limpieza final de obra

`;

    return content;
  };

  const createInformeObraContent = () => {
    const informe = datos;
    let content = `
üìÖ INFORMACI√ìN DEL INFORME DIARIO
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

üèóÔ∏è  Obra: ${informe.obra_nombre || 'No especificada'}
üìÖ Fecha del Trabajo: ${informe.fecha ? informe.fecha.toLocaleDateString('es-AR') : new Date().toLocaleDateString('es-AR')}
üë∑ Jefe de Obra: ${informe.jefe_nombre || 'No especificado'}
üå§Ô∏è  Condiciones Clim√°ticas: ${informe.clima || 'Normales'}

`;

    if (selectedOptions.personal_presente && informe.personal_presente?.length > 0) {
      content += `
üë• PERSONAL PRESENTE
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

`;
      informe.personal_presente.forEach(persona => {
        content += `‚Ä¢ ${persona.nombre} - ${persona.rol || 'Operario'}\n`;
      });
      content += '\n';
    }

    if (selectedOptions.tareas_realizadas && informe.avance_descripcion) {
      content += `
üî® TAREAS REALIZADAS
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

${informe.avance_descripcion}

`;
    }

    if (selectedOptions.materiales_utilizados && informe.materiales_usados?.length > 0) {
      content += `
üß± MATERIALES UTILIZADOS
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

`;
      informe.materiales_usados.forEach(material => {
        content += `‚Ä¢ ${material.nombre}: ${material.cantidad} ${material.unidad}\n`;
      });
      content += '\n';
    }

    if (selectedOptions.avance_porcentual && informe.porcentaje_avance) {
      content += `
üìä PROGRESO DE LA OBRA
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

Avance del d√≠a: ${informe.porcentaje_avance}%
${'‚ñà'.repeat(Math.floor(informe.porcentaje_avance / 5))}${'‚ñë'.repeat(20 - Math.floor(informe.porcentaje_avance / 5))} ${informe.porcentaje_avance}%

`;
    }

    if (selectedOptions.observaciones_diarias && informe.observaciones) {
      content += `
üìù OBSERVACIONES Y NOVEDADES
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

${informe.observaciones}

`;
    }

    return content;
  };

  const createReportePersonalContent = () => {
    const { usuarios, albaniles, jefesDeObra, obras } = datos;
    let content = `
üë• ESTAD√çSTICAS GENERALES DEL PERSONAL
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

üìä Resumen General:
‚Ä¢ Total de empleados activos: ${usuarios?.filter(u => u.activo).length || 0}
‚Ä¢ Alba√±iles: ${albaniles?.length || 0}
‚Ä¢ Jefes de obra: ${jefesDeObra?.length || 0}
‚Ä¢ Obras asignadas: ${obras?.length || 0}

`;

    if (selectedOptions.rendimiento_individual && albaniles?.length > 0) {
      content += `
üéØ RENDIMIENTO POR ALBA√ëIL
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

`;
      albaniles.forEach(albanil => {
        const obrasAsignadas = obras?.filter(o => o.albanil_asignado === albanil.id).length || 0;
        content += `üë∑ ${albanil.nombre} ${albanil.apellido}
   ‚îú‚îÄ Obras asignadas: ${obrasAsignadas}
   ‚îú‚îÄ Estado: ${albanil.activo ? 'üü¢ Activo' : 'üî¥ Inactivo'}
   ‚îî‚îÄ √öltimo acceso: ${albanil.ultima_conexion ? new Date(albanil.ultima_conexion).toLocaleDateString('es-AR') : 'Nunca'}

`;
      });
    }

    if (selectedOptions.asignaciones_actuales && obras?.length > 0) {
      content += `
üìã ASIGNACIONES ACTUALES
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

`;
      obras.forEach(obra => {
        content += `üèóÔ∏è  ${obra.nombre}
   ‚îú‚îÄ Ubicaci√≥n: ${obra.ubicacion}
   ‚îú‚îÄ Estado: ${obra.estado}
   ‚îú‚îÄ Alba√±il: ${obra.albanil_nombre} ${obra.albanil_apellido}
   ‚îî‚îÄ Supervisor: ${obra.jefe_nombre || 'Sin asignar'} ${obra.jefe_apellido || ''}

`;
      });
    }

    return content;
  };

  const createEstadisticasContent = () => {
    const { obras, usuarios, albaniles, jefesDeObra, stats } = datos;
    let content = `
üìà M√âTRICAS PRINCIPALES
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

üéØ KPIs Generales:
‚Ä¢ Obras completadas: ${obras?.filter(o => o.estado === 'completada').length || 0}
‚Ä¢ Obras en progreso: ${obras?.filter(o => o.estado === 'en_progreso').length || 0}
‚Ä¢ Tasa de finalizaci√≥n: ${obras?.length > 0 ? Math.round((obras.filter(o => o.estado === 'completada').length / obras.length) * 100) : 0}%
‚Ä¢ Personal activo: ${usuarios?.filter(u => u.activo).length || 0}

üìä AN√ÅLISIS DE PRODUCTIVIDAD
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

‚Ä¢ Promedio de obras por alba√±il: ${albaniles?.length > 0 ? Math.round((obras?.length || 0) / albaniles.length * 10) / 10 : 0}
‚Ä¢ Supervisores disponibles: ${jefesDeObra?.filter(j => j.activo).length || 0}
‚Ä¢ Relaci√≥n supervisor/obra: ${obras?.length > 0 && jefesDeObra?.length > 0 ? Math.round((obras.length / jefesDeObra.length) * 10) / 10 : 0}

üìà TENDENCIAS
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

${obras?.length > 0 ? 
`‚Ä¢ Total de proyectos gestionados: ${obras.length}
‚Ä¢ Distribuci√≥n por estado:
  ‚úÖ Completadas: ${obras.filter(o => o.estado === 'completada').length} (${Math.round((obras.filter(o => o.estado === 'completada').length / obras.length) * 100)}%)
  üîÑ En progreso: ${obras.filter(o => o.estado === 'en_progreso').length} (${Math.round((obras.filter(o => o.estado === 'en_progreso').length / obras.length) * 100)}%)
  ‚è≥ Pendientes: ${obras.filter(o => o.estado === 'pendiente').length} (${Math.round((obras.filter(o => o.estado === 'pendiente').length / obras.length) * 100)}%)` 
: '‚Ä¢ No hay datos suficientes para generar tendencias'}

`;

    return content;
  };

  const createTrabajoDiarioContent = () => {
    const { informesObra, albaniles, obras } = datos;
    let content = `
üìÖ AN√ÅLISIS DE TRABAJOS POR PER√çODO
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

üóìÔ∏è  Per√≠odo analizado: √öltimos 30 d√≠as
üìä Total de informes procesados: ${informesObra?.length || 0}
üèóÔ∏è  Obras activas en el per√≠odo: ${obras?.filter(o => o.estado === 'en_progreso').length || 0}

`;

    if (selectedOptions.trabajos_por_fecha && informesObra?.length > 0) {
      content += `
üìÖ TRABAJOS POR FECHA
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

`;
      // Agrupar informes por fecha
      const informesPorFecha = {};
      informesObra.forEach(informe => {
        const fecha = informe.fecha ? informe.fecha.toLocaleDateString('es-AR') : 'Sin fecha';
        if (!informesPorFecha[fecha]) {
          informesPorFecha[fecha] = [];
        }
        informesPorFecha[fecha].push(informe);
      });

      Object.entries(informesPorFecha).forEach(([fecha, informes]) => {
        content += `üìÖ ${fecha} - ${informes.length} informe(s)\n`;
        informes.forEach(informe => {
          content += `   ‚îî‚îÄ ${informe.obra_nombre} (${informe.jefe_nombre})\n`;
        });
        content += '\n';
      });
    }

    if (selectedOptions.trabajos_por_empleado && albaniles?.length > 0) {
      content += `
üë∑ ACTIVIDAD POR EMPLEADO
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

`;
      albaniles.forEach(albanil => {
        const obrasAsignadas = obras?.filter(o => o.albanil_asignado === albanil.id).length || 0;
        content += `üë§ ${albanil.nombre} ${albanil.apellido}
   ‚îú‚îÄ Obras asignadas: ${obrasAsignadas}
   ‚îî‚îÄ Estado: ${albanil.activo ? 'Activo' : 'Inactivo'}

`;
      });
    }

    return content;
  };

  const createInformeObrasContent = () => {
    const { obras, albaniles, jefesDeObra } = datos;
    let content = `
üèóÔ∏è  ESTADO GENERAL DE OBRAS
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

üìä Resumen General:
‚Ä¢ Total de obras registradas: ${obras?.length || 0}
‚Ä¢ Obras activas: ${obras?.filter(o => o.estado === 'en_progreso').length || 0}
‚Ä¢ Obras completadas: ${obras?.filter(o => o.estado === 'completada').length || 0}
‚Ä¢ Obras pendientes: ${obras?.filter(o => o.estado === 'pendiente').length || 0}

`;

    if (selectedOptions.obras_activas && obras?.length > 0) {
      const obrasActivas = obras.filter(o => o.estado === 'en_progreso');
      if (obrasActivas.length > 0) {
        content += `
üîÑ OBRAS EN PROGRESO
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

`;
        obrasActivas.forEach(obra => {
          content += `üèóÔ∏è  ${obra.nombre}
   ‚îú‚îÄ üìç Ubicaci√≥n: ${obra.ubicacion}
   ‚îú‚îÄ üë∑ Alba√±il: ${obra.albanil_nombre} ${obra.albanil_apellido}
   ‚îú‚îÄ üõ†Ô∏è  Supervisor: ${obra.jefe_nombre || 'Sin asignar'} ${obra.jefe_apellido || ''}
   ‚îî‚îÄ üìÖ Inicio: ${obra.fecha_creacion ? new Date(obra.fecha_creacion).toLocaleDateString('es-AR') : 'No registrada'}

`;
        });
      }
    }

    if (selectedOptions.obras_completadas && obras?.length > 0) {
      const obrasCompletas = obras.filter(o => o.estado === 'completada');
      if (obrasCompletas.length > 0) {
        content += `
‚úÖ OBRAS COMPLETADAS
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

`;
        obrasCompletas.forEach(obra => {
          content += `‚úÖ ${obra.nombre}
   ‚îú‚îÄ üìç Ubicaci√≥n: ${obra.ubicacion}
   ‚îú‚îÄ üë∑ Ejecutor: ${obra.albanil_nombre} ${obra.albanil_apellido}
   ‚îî‚îÄ üìÖ Finalizada: ${obra.fecha_finalizacion ? new Date(obra.fecha_finalizacion).toLocaleDateString('es-AR') : 'No registrada'}

`;
        });
      }
    }

    if (selectedOptions.asignaciones_personal) {
      content += `
üë• DISTRIBUCI√ìN DE PERSONAL
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

üìä Asignaciones actuales:
‚Ä¢ Alba√±iles con obras: ${obras?.filter(o => o.albanil_asignado).length || 0}
‚Ä¢ Alba√±iles disponibles: ${(albaniles?.length || 0) - (obras?.filter(o => o.albanil_asignado).length || 0)}
‚Ä¢ Supervisores activos: ${jefesDeObra?.filter(j => j.activo).length || 0}

`;
    }

    return content;
  };

  const createGenericContent = () => {
    return `
üìã CONTENIDO DEL REPORTE
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

Este es un reporte generado autom√°ticamente por el sistema.

Datos incluidos:
${Object.keys(datos).map(key => `‚Ä¢ ${key}: ${typeof datos[key] === 'object' ? JSON.stringify(datos[key]).substring(0, 50) + '...' : datos[key]}`).join('\n')}

Opciones seleccionadas:
${Object.entries(selectedOptions).filter(([key, value]) => value).map(([key]) => `‚Ä¢ ${key}`).join('\n')}

`;
  };

  const createHTMLContent = () => {
    return `
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>${config.titulo}</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        .header { text-align: center; border-bottom: 2px solid ${config.color}; padding-bottom: 20px; }
        .logo { width: 120px; height: 80px; margin: 0 auto 20px; }
        .content { margin: 20px 0; }
        .section { margin: 20px 0; }
        .footer { border-top: 1px solid #ccc; padding-top: 20px; text-align: center; color: #666; }
    </style>
</head>
<body>
    <div class="header">
        <div class="logo">${COMPANY_LOGO_SVG}</div>
        <h1>${config.titulo}</h1>
        <p>${config.subtitulo}</p>
    </div>
    <div class="content">
        <p><strong>Fecha:</strong> ${new Date().toLocaleDateString('es-AR')}</p>
        <p><strong>Generado por:</strong> Sistema Construcci√≥n Pro</p>
        <!-- Aqu√≠ ir√≠a el contenido espec√≠fico del reporte -->
    </div>
    <div class="footer">
        <p>${COMPANY_INFO.nombre} - ${COMPANY_INFO.direccion}</p>
        <p>${COMPANY_INFO.telefono} | ${COMPANY_INFO.email}</p>
    </div>
</body>
</html>
    `;
  };

  const createFooter = () => {
    return `
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

üìÑ INFORMACI√ìN DEL DOCUMENTO
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

üìÖ Fecha de emisi√≥n: ${new Date().toLocaleDateString('es-AR')}
üïê Hora de generaci√≥n: ${new Date().toLocaleTimeString('es-AR')}
üè¢ Empresa: ${COMPANY_INFO.nombre}
üìß Contacto: ${COMPANY_INFO.email}
üìû Tel√©fono: ${COMPANY_INFO.telefono}

‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

Este documento fue generado autom√°ticamente por el Sistema de Gesti√≥n 
de Construcci√≥n Pro. Para consultas o aclaraciones, contacte a nuestro 
equipo t√©cnico.

üîí Documento confidencial - Uso interno √∫nicamente
üìã ID del Reporte: ${Date.now().toString(36).toUpperCase()}

‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù`;
  };

  const showNotification = (message, type) => {
    const toast = document.createElement('div');
    toast.className = `fixed top-4 right-4 px-4 py-2 rounded-lg shadow-lg z-50 ${
      type === 'success' ? 'bg-green-500 text-white' :
      type === 'error' ? 'bg-red-500 text-white' :
      'bg-blue-500 text-white'
    }`;
    toast.textContent = message;
    document.body.appendChild(toast);
    setTimeout(() => toast.remove(), 3000);
  };

  const toggleOption = (option) => {
    setSelectedOptions(prev => ({
      ...prev,
      [option]: !prev[option]
    }));
  };

  const getOptionLabel = (option) => {
    const labels = {
      info_obra: 'Informaci√≥n de la obra',
      fotos: 'Registro fotogr√°fico',
      ubicacion: 'Ubicaci√≥n GPS',
      fecha: 'Fecha y hora',
      observaciones: 'Observaciones',
      personal: 'Personal asignado',
      resumen_ejecutivo: 'Resumen ejecutivo',
      materiales_usados: 'Materiales utilizados',
      personal_participante: 'Personal participante',
      timeline: 'Cronograma',
      fotos_finales: 'Fotograf√≠as finales',
      certificaciones: 'Certificaciones',
      detalle_materiales: 'Detalle de materiales',
      costos_mano_obra: 'Costos de mano de obra',
      subtotales: 'Subtotales',
      impuestos: 'Impuestos y retenciones',
      total_general: 'Total general',
      condiciones_comerciales: 'Condiciones comerciales',
      fecha_trabajo: 'Fecha del trabajo',
      personal_presente: 'Personal presente',
      tareas_realizadas: 'Tareas realizadas',
      materiales_utilizados: 'Materiales utilizados',
      avance_porcentual: 'Avance porcentual',
      observaciones_diarias: 'Observaciones diarias',
      estadisticas_generales: 'Estad√≠sticas generales',
      rendimiento_individual: 'Rendimiento individual',
      asignaciones_actuales: 'Asignaciones actuales',
      historial_obras: 'Historial de obras',
      evaluaciones: 'Evaluaciones',
      metricas_obras: 'M√©tricas de obras',
      eficiencia_personal: 'Eficiencia del personal',
      uso_materiales: 'Uso de materiales',
      tendencias_temporales: 'Tendencias temporales',
      kpis_principales: 'KPIs principales',
      periodo_analizado: 'Per√≠odo analizado',
      trabajos_por_fecha: 'Trabajos por fecha',
      trabajos_por_empleado: 'Trabajos por empleado',
      resumen_actividades: 'Resumen de actividades',
      conclusiones: 'Conclusiones',
      resumen_general: 'Resumen general',
      obras_activas: 'Obras activas',
      obras_completadas: 'Obras completadas',
      asignaciones_personal: 'Asignaciones de personal',
      cronogramas: 'Cronogramas'
    };
    return labels[option] || option.replace(/_/g, ' ');
  };

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 w-full max-w-4xl mx-4 max-h-[90vh] overflow-y-auto">
        <div className="flex justify-between items-center mb-6">
          <h2 className="text-2xl font-bold text-gray-800 flex items-center">
            üìÑ {config.titulo}
          </h2>
          <button 
            onClick={onClose}
            className="text-gray-500 hover:text-gray-700 text-2xl font-bold"
          >
            ‚úï
          </button>
        </div>

        {/* Preview del reporte */}
        <div className="bg-gray-50 border rounded-lg p-4 mb-6 max-h-96 overflow-y-auto">
          <div className="text-center mb-4">
            <div className="w-24 h-16 mx-auto mb-2 bg-blue-600 rounded flex items-center justify-center">
              <span className="text-white font-bold text-lg">üìÑ</span>
            </div>
            <h3 className="font-bold text-lg" style={{ color: config.color }}>{COMPANY_INFO.nombre}</h3>
            <p className="text-sm text-gray-600">{COMPANY_INFO.direccion}</p>
            <p className="text-sm text-gray-600">{COMPANY_INFO.telefono} | {COMPANY_INFO.email}</p>
          </div>
          
          <hr className="my-4" />
          
          <h4 className="font-bold text-center mb-2" style={{ color: config.color }}>{config.titulo}</h4>
          <p className="text-center text-sm text-gray-600 mb-4">{config.subtitulo}</p>
          
          <div className="space-y-2 text-sm">
            <p><strong>üìÖ Fecha:</strong> {new Date().toLocaleDateString('es-AR')}</p>
            <p><strong>üïê Hora:</strong> {new Date().toLocaleTimeString('es-AR')}</p>
            <p><strong>üìã Tipo:</strong> {config.titulo}</p>
            
            <div className="mt-4">
              <strong>üìä Contenido incluido:</strong>
              <ul className="list-disc list-inside ml-4 mt-2">
                {Object.entries(selectedOptions)
                  .filter(([key, value]) => value)
                  .map(([key, value]) => (
                    <li key={key} className="text-green-600">‚úÖ {getOptionLabel(key)}</li>
                  ))}
              </ul>
            </div>
          </div>
        </div>

        {/* Opciones de configuraci√≥n */}
        <div className="mb-6">
          <h5 className="font-semibold mb-3 text-gray-800">‚öôÔ∏è Configurar contenido del reporte:</h5>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3 max-h-48 overflow-y-auto">
            {config.incluir.map(item => (
              <div key={item} className="flex items-center space-x-2 p-2 border rounded hover:bg-gray-50">
                <input 
                  type="checkbox" 
                  id={item}
                  checked={selectedOptions[item] || false}
                  onChange={() => toggleOption(item)}
                  className="rounded text-blue-600 focus:ring-blue-500"
                />
                <label htmlFor={item} className="text-sm cursor-pointer flex-1">
                  {getOptionLabel(item)}
                </label>
              </div>
            ))}
          </div>
        </div>

        {/* Informaci√≥n adicional */}
        <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6">
          <h6 className="font-semibold text-blue-800 mb-2">‚ÑπÔ∏è Informaci√≥n del PDF:</h6>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
            <div>
              <p><strong>üìÑ Formato:</strong> {config.formato}</p>
              <p><strong>üé® Color corporativo:</strong> <span style={{ color: config.color }}>‚óè</span> {config.color}</p>
              <p><strong>üìã P√°ginas estimadas:</strong> 2-5</p>
            </div>
            <div>
              <p><strong>üè¢ Logo:</strong> Incluido autom√°ticamente</p>
              <p><strong>üìß Informaci√≥n de contacto:</strong> Incluida</p>
              <p><strong>üî¢ ID √∫nico:</strong> Generado autom√°ticamente</p>
            </div>
          </div>
        </div>

        {/* Botones de acci√≥n */}
        <div className="flex space-x-4">
          <button
            onClick={generatePDF}
            disabled={isGenerating}
            className={`flex-1 py-3 px-6 rounded-lg font-semibold transition-all ${
              isGenerating 
                ? 'bg-gray-400 text-white cursor-not-allowed' 
                : 'text-white hover:opacity-90 transform hover:scale-105'
            }`}
            style={{ backgroundColor: config.color }}
          >
            {isGenerating ? (
              <span className="flex items-center justify-center">
                <span className="spinner w-5 h-5 border-2 border-white border-t-transparent rounded-full mr-2"></span>
                Generando PDF...
              </span>
            ) : (
              <span className="flex items-center justify-center">
                üìÑ Generar PDF Profesional
              </span>
            )}
          </button>
          
          <button
            onClick={onClose}
            className="px-6 py-3 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors"
          >
            Cancelar
          </button>
        </div>

        {/* Nota t√©cnica */}
        <div className="mt-4 text-xs text-gray-500 text-center">
          üí° <strong>Nota:</strong> En la implementaci√≥n final, este generador utilizar√° librer√≠as como jsPDF 
          o Puppeteer para crear PDFs reales con formato profesional.
        </div>
      </div>
    </div>
  );
};

// Hacer disponible globalmente
window.ReportGenerator = ReportGenerator;